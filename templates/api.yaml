AWSTemplateFormatVersion: '2010-09-09'
Description: Rotten Chess API Resources

Parameters:
  GetPlayerStatsFunction:
    Type: String
  BatchGetPlayerStatsFunction:
    Type: String
  GetPlayersFunction:
    Type: String
  APILogGroup:
    Type: String

Resources:
  RottenChessAPI:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: RottenChessAPI
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins:
          - https://rottenchess.com
          - https://www.rottenchess.com
          - http://localhost:3000
        AllowMethods:
          - GET
          - POST
        AllowHeaders:
          - Content-Type
          - X-Amz-Date
          - Authorization

  GetPlayerStatsIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref RottenChessAPI
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetPlayerStatsFunction}/invocations
      PayloadFormatVersion: "2.0"
  
  BatchGetPlayerStatsIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref RottenChessAPI
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BatchGetPlayerStatsFunction}/invocations
      PayloadFormatVersion: "2.0"

  GetPlayersIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref RottenChessAPI
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetPlayersFunction}/invocations
      PayloadFormatVersion: "2.0"

  GetPlayerStatsRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref RottenChessAPI
      RouteKey: GET /players/{username}
      AuthorizationType: NONE
      Target: !Join 
        - '/'
        - - 'integrations'
          - !Ref GetPlayerStatsIntegration
  
  BatchGetPlayerStatsRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref RottenChessAPI
      RouteKey: POST /players/batch
      AuthorizationType: NONE
      Target: !Join 
        - '/'
        - - 'integrations'
          - !Ref BatchGetPlayerStatsIntegration

  GetPlayersRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref RottenChessAPI
      RouteKey: GET /players
      AuthorizationType: NONE
      Target: !Join 
        - '/'
        - - 'integrations'
          - !Ref GetPlayersIntegration

  LambdaInvokePermissionGetPlayerStats:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GetPlayerStatsFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RottenChessAPI}/prod/GET/players/*
  
  LambdaInvokePermissionBatchGetPlayerStats:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BatchGetPlayerStatsFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RottenChessAPI}/prod/POST/players/batch

  LambdaInvokePermissionGetPlayers:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GetPlayersFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RottenChessAPI}/prod/GET/players

  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref RottenChessAPI
      StageName: prod
      AutoDeploy: true
      AccessLogSettings:
        DestinationArn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${APILogGroup}:*
        Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","caller":"$context.identity.caller","user":"$context.identity.user","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'

  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: api.rottenchess.com
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: api.rottenchess.com
          HostedZoneId: Z09567002DFAQSHJR757S
  
  APIDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: api.rottenchess.com
      DomainNameConfigurations:
        - EndpointType: REGIONAL
          CertificateArn: !Ref Certificate

  ApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      ApiId: !Ref RottenChessAPI
      DomainName: !Ref APIDomain
      Stage: prod

  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: Z09567002DFAQSHJR757S
      Name: api.rottenchess.com
      Type: A
      AliasTarget:
        DNSName: !GetAtt APIDomain.RegionalDomainName
        HostedZoneId: !GetAtt APIDomain.RegionalHostedZoneId

Outputs:
  ApiEndpoint:
    Value: !Sub https://${APIDomain}
    Description: The endpoint of the PlayerStats API